<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="PVRStatusImageVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.HasTimer | ListItem.HasTimerSchedule">windows/pvr/timer.png</value>
	</variable>
	<variable name="PlaylistLabelVar">
		<value condition="Stringcompare(ListItem.DbType,episode)">$INFO[ListItem.TVShowtitle,,: ]$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value condition="Stringcompare(ListItem.DbType,musicvideo)">$INFO[ListItem.Artist,, - ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PlaylistLabel2Var">
		<value condition="Window.IsActive(musicplaylist)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="InfoListPathVar">
		<value>$INFO[ListItem.FolderPath]</value>
	</variable>
	<variable name="MusicInfoTextboxVar">
		<value condition="Stringcompare(ListItem.DbType,song) + !IsEmpty(ListItem.ContributorAndRole)">$INFO[ListItem.ContributorAndRole,[B]$LOCALIZE[31128][/B][CR][COLOR=white],[/COLOR]]</value>
		<value condition="Stringcompare(ListItem.DbType,song)">$INFO[ListItem.Comment,[B]$LOCALIZE[569][/B][CR][COLOR=white],[/COLOR]]</value>
		<value condition="Stringcompare(ListItem.DbType,album)">$INFO[ListItem.Property(Album_Description),[COLOR=white],[/COLOR]]</value>
		<value condition="Stringcompare(ListItem.DbType,artist)">$INFO[ListItem.Property(Artist_Description),[COLOR=white],[/COLOR]]</value>
	</variable>
	<variable name="NowPlayingSublabelVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, - ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="FullScreenInfoTextBoxVar">
		<value condition="Control.HasFocus(5553)">$INFO[VideoPlayer.Tagline,[B],[/B][CR]]$INFO[VideoPlayer.Plot]</value>
		<value condition="Control.HasFocus(5555)">$INFO[VideoPlayer.NextTitle,[B],[/B][CR]]$INFO[VideoPlayer.NextPlot]</value>
		<value>$INFO[VideoPlayer.CastAndRole]</value>
	</variable>
	<variable name="NowPlayingIconVar">
		<value condition="Player.Paused">icons/now-playing/pause.png</value>
		<value>icons/now-playing/play.png</value>
	</variable>
	<variable name="NowPlayingPosterVar">
		<value condition="!IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(livetv)">DefaultTVShows.png</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="InfoWallThumbVar">
		<value condition="!IsEmpty(Listitem.Art(poster))">$INFO[Listitem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconWallThumbVar">
		<value condition="Stringcompare(listitem.dbtype,studio)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ListLabel2Var">
		<value condition="Container.Content(tvshows) + Stringcompare(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<value condition="Container.Content(movies) + Stringcompare(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.mpaa,[COLOR grey],[/COLOR]  âˆ™  ]$INFO[ListItem.Label2]</value>
		<value condition="Stringcompare(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Year]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="ListBoxInfoVar">
		<value condition="Stringcompare(Container.FolderPath,addons://outdated/) + !IsEmpty(ListItem.Addonnews)">$INFO[ListItem.Addonnews]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Description)]</value>
		<value condition="Stringcompare(listitem.dbtype,album)">$INFO[ListItem.Property(album_description)]</value>
		<value condition="Stringcompare(listitem.dbtype,musicvideo) | Stringcompare(listitem.dbtype,video)">$INFO[ListItem.Genre,[COLOR primary_color]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Plot]</value>
		<value condition="Stringcompare(listitem.dbtype,artist)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="Stringcompare(listitem.dbtype,song)">$INFO[ListItem.Genre,[COLOR primary_color]$LOCALIZE[515]: [/COLOR],[CR]]$INFO[ListItem.Duration,[COLOR primary_color]$LOCALIZE[180]: [/COLOR],[CR]]$INFO[ListItem.Playcount,[COLOR primary_color]$LOCALIZE[567]: [/COLOR],[CR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR primary_color]$LOCALIZE[515]: [/COLOR],[CR]]</value>
	</variable>
	<variable name="AddonsLabel2Var">
		<value condition="ListItem.Property(addon.downloading)">$INFO[ListItem.Property(addon.status)]</value>
		<value condition="!Stringcompare(Container.SortMethod,$LOCALIZE[551])">$INFO[ListItem.Label2]</value>
		<value>$INFO[ListItem.Property(Addon.Creator),, - ]$INFO[ListItem.Property(Addon.Version)]</value>
	</variable>
	<variable name="AddonsListIconVar">
		<value condition="!IsEmpty(ListItem.Property(Addon.Broken))">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.downloading)">icons/addonstatus/install.png</value>
		<value condition="ListItem.Property(Addon.Installed) + !ListItem.Property(Addon.Enabled) + Window.IsActive(addonbrowser)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.Property(addon.UpdateAvail)">icons/addonstatus/update.png</value>
		<value condition="ListItem.Property(Addon.Installed)">OverlayWatched.png</value>
		<value condition="!ListItem.Stringcompare(ListItem.Label,..)">OverlayUnwatched.png</value>
	</variable>
	<variable name="ResolutionFlagVar">
		<value condition="ListItem.IsStereoscopic">3D</value>
		<value condition="isGreaterThan(ListItem.VideoResolution,1080)">4K</value>
		<value>$INFO[ListItem.VideoResolution]</value>
	</variable>
	<variable name="BannerVar">
		<value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Art(tvshow.banner)]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="ListItem.Stringcompare(ListItem.Label,..)">DefaultFolderBackPoster.png</value>
		<value condition="!IsEmpty(Container.Art(season.poster)) + Container.Content(episodes)">$INFO[Container.Art(season.poster)]</value>
		<value condition="!IsEmpty(Container.Art(tvshow.poster)) + Container.Content(episodes)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(Container.Art(tvshow.poster)) + Container.Content(seasons) + Window.IsActive(movieinformation)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">$INFO[Container.ListItem.Art(thumb)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster)) + !Stringcompare(listitem.dbtype,season)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>
	<variable name="InfoDialogPosterVar">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
	<variable name="ListPosterVar">
		<value condition="ListItem.Stringcompare(ListItem.Label,..)">DefaultFolderBackPoster.png</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="!IsEmpty(Player.SeekStepSize)">$LOCALIZE[773][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>
	<variable name="SeekTimeLabelVar">
		<value condition="!IsEmpty(Player.SeekNumeric)">[B]$INFO[Player.SeekNumeric(hh:mm:ss)][/B]</value>
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
		<value>$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
	</variable>
	<variable name="MusicOSDHelpTextVar">
		<value condition="Control.HasFocus(620)">$LOCALIZE[31033]$INFO[MusicPlayer.UserRating, : ]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</value>
		<value condition="Control.HasFocus(607) + Playlist.IsRandom">$LOCALIZE[590]: $LOCALIZE[16041]</value>
		<value condition="Control.HasFocus(607)">$LOCALIZE[590]: $LOCALIZE[16039]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[24013]</value>
		<value condition="Control.HasFocus(5000)">$LOCALIZE[10004]</value>
	</variable>
	<variable name="SkinSettingsHelpTextVar">
		<value condition="Container(9000).HasFocus(1)">$LOCALIZE[31129]</value>
		<value condition="Container(9000).HasFocus(2)">$LOCALIZE[31130]</value>
	</variable>
	<variable name="VolumeIconVar">
		<value condition="Player.Muted">dialogs/volume/mute.png</value>
		<value condition="isGreaterThan(Player.Volume,66)">dialogs/volume/volume.png</value>
		<value condition="isGreaterThan(Player.Volume,33)">dialogs/volume/volume2.png</value>
		<value condition="player.passthrough">dialogs/volume/volume.png</value>
		<value>dialogs/volume/volume1.png</value>
	</variable>
	<variable name="ListSubLabelVar">
		<value condition="ListItem.IsCollection"></value>
		<value>[COLOR grey]$INFO[ListItem.Year, (,)][/COLOR]</value>
	</variable>
	<variable name="VideoInfoMainLabelVar">
		<value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Year, ([COLOR grey],[/COLOR])]</value>
		<value>$INFO[ListItem.Label]$INFO[ListItem.Year, ([COLOR grey],[/COLOR])]</value>
	</variable>
	<variable name="VideoInfoSubLabelVar">
		<value condition="Stringcompare(ListItem.DBType,episode)">$INFO[ListItem.Season]$INFO[ListItem.Episode,[COLOR grey]x[/COLOR],: ]$INFO[ListItem.TVShowTitle]</value>
		<value condition="Stringcompare(ListItem.DBType,movie)">$INFO[ListItem.Tagline,[I],[/I]]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="NowPlayingBreadcrumbsVar">
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="Window.IsActive(fullscreenvideo)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, ([COLOR primary_color],[/COLOR])]</value>
		<value condition="MusicPartyMode.Enabled">$LOCALIZE[589]</value>
		<value>$LOCALIZE[31000]...</value>
	</variable>
	<variable name="OSDSubLabelVar">
		<value condition="Window.IsActive(visualisation)">$LOCALIZE[554] $INFO[Playlist.Position] / $INFO[Playlist.Length]</value>
		<value condition="VideoPlayer.Content(musicvideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, - ]</value>
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,[COLOR primary_color]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR primary_color]E,: [/COLOR]]$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="VideoPlayer.Content(LiveTV) | PVR.IsPlayingRecording">$INFO[VideoPlayer.ChannelNumberLabel,([COLOR=blue],[/COLOR]) ]$INFO[VideoPlayer.ChannelName]</value>
		<value>$INFO[VideoPlayer.Genre]</value>
	</variable>
	<variable name="HomeFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
		<value>special://skin/extras/backgrounds/SKINDEFAULT.jpg</value>
	</variable>
	<variable name="MediaFanartVar">
		<value condition="Skin.HasSetting(no_fanart)"></value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="Container.Content(genres) + Window.IsActive(videos)">$INFO[Skin.String(MovieGenreFanart.path)]$INFO[ListItem.Label]$INFO[Skin.String(MovieGenreFanart.ext)]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.FolderPath]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value>$INFO[Container.Art(fanart)]</value>
	</variable>
	<variable name="WeatherFanartVar">
		<value condition="!IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!IsEmpty(Window(weather).Property(current.fanartcode)) + !IsEmpty(Skin.String(weatherfanart.path))">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="!IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]weather$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
	<variable name="ListWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="!IsEmpty(ListItem.Overlay)">$INFO[ListItem.Overlay]</value>
		<value condition="!ListItem.Stringcompare(ListItem.Label,..)">OverlayUnwatched.png</value>
	</variable>
	<variable name="WallWatchedIconVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.IsCollection">overlays/set.png</value>
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="isGreaterThan(ListItem.Playcount,0)">$INFO[ListItem.Overlay]</value>
	</variable>
	<!-- Breadcrumbs -->
	<variable name="BreadcrumbsVideoVar">
		<value condition="Container.Content(movies) | SubString(container.folderpath,library://video/movies/,left) | SubString(container.folderpath,videodb://movies,left)">$LOCALIZE[20342]</value>
		<value condition="Container.Content(musicvideos) | SubString(container.folderpath,library://video/musicvideos/,left) | SubString(container.folderpath,videodb://musicvideos,left)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(tvshows) | SubString(container.folderpath,library://video/tvshows/,left) | SubString(container.folderpath,videodb://tvshows,left)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(episodes)">$LOCALIZE[20343]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="BreadcrumbsPVRChannelsVar">
		<value condition="Window.IsActive(TVChannels)">$LOCALIZE[19020] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
	</variable>
	<variable name="BreadcrumbsPVRGuideVar">
		<value condition="Window.IsActive(TVGuide)">$LOCALIZE[19020] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
		<value>$LOCALIZE[19021] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
	</variable>
	<variable name="BreadcrumbsPVRRecordingsVar">
		<value condition="Window.IsActive(TVRecordings)">$LOCALIZE[19020] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRTimersVar">
		<value condition="Window.IsActive(TVTimers)">$LOCALIZE[19020] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(RadioTimers)">$LOCALIZE[19021] / $LOCALIZE[19040]</value>
		<value condition="Window.IsActive(TVTimerRules)">$LOCALIZE[19020] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
	</variable>
	<variable name="BreadcrumbsPVRSearchVar">
		<value condition="Window.IsActive(TVSearch)">$LOCALIZE[19020] / $LOCALIZE[137]</value>
		<value>$LOCALIZE[19021] / $LOCALIZE[137]</value>
	</variable>
	<variable name="RepeatButtonColordiffuseVar">
		<value condition="Control.HasFocus(704)">primary_color</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="PVRAreaVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[19017]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[19040]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[19138]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[137]</value>
	</variable>
	<variable name="PlayerControlsRepeatImageVar">
		<value condition="Playlist.IsRepeatOne">osd/fullscreen/buttons/repeat-one.png</value>
		<value condition="Playlist.IsRepeat">osd/fullscreen/buttons/repeat-all.png</value>
		<value>osd/fullscreen/buttons/repeat-off.png</value>
	</variable>
	<variable name="PlayerLabel1">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerLabel2">
		<value condition="VideoPlayer.Content(episodes)">$LOCALIZE[20373]$INFO[VideoPlayer.Season,: , / ]$LOCALIZE[20359]$INFO[VideoPlayer.Episode,: ]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">[COLOR grey]$INFO[MusicPlayer.Album][/COLOR]$INFO[MusicPlayer.Year, [,] ]</value>
	</variable>
	<variable name="PlayerLabel3">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies) | VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Genre]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.TrackNumber,,: ][COLOR=grey]$INFO[Player.Title][/COLOR]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
	</variable>
	<variable name="TimersSubLabel">
		<value condition="[Window.IsActive(tvtimerrules) | Window.IsActive(radiotimerrules)] + !ListItem.HasTimerSchedule">$INFO[ListItem.Timertype]</value>
		<value>$INFO[ListItem.EpisodeName]</value>
	</variable>
</includes>
